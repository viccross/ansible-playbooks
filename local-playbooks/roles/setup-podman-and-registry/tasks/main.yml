# setup-podman-and-registry
#

- name: install podman with Cockpit support, plus jq for JSON things
  yum:
    name:
      - podman
      - cockpit-podman
      - jq
    state: present

- name: set up registry directories
  file:
    path: "{{ item }}"
    state: directory
    owner: root
    group: jenkins
    mode: "0775"
  loop:
  - "/opt/registry/auth"
  - "/opt/registry/certs"
  - "/opt/registry/data"

- name: create a certificate for the registry
  block:
  - name: generate a private key for Registry
    openssl_privatekey:
      path: "{{ ca_key_path }}/registry.pem"
      group: support
      mode: 0640
  - name: generate CSR for Registry
    openssl_csr:
      path: "{{ ca_csr_path }}/registry.csr"
      privatekey_path: "{{ ca_key_path }}/registry.pem"
      common_name: "{{ build_hostname }}"
      organization_name: "IBM"
      organizational_unit_name: "IBM z/VM for Red Hat OpenShift PoC"
      country_name: "US"
      keyUsage: ["digitalSignature","keyAgreement"]
      extendedKeyUsage: ["clientAuth","serverAuth"]
  - name: generate Certificate
    openssl_certificate:
      path: "{{ ca_cert_path }}/registry.cert"
      csr_path: "{{ ca_csr_path }}/registry.csr"
      ownca_path: "{{ ca_cert_path }}/oqsRootCA.cert"
      ownca_privatekey_path: "{{ ca_key_path }}/oqsRootCA.pem"
      ownca_not_after: +397d
      provider: ownca
      force: yes
  - name: create the bundle for Registry
    shell:
      cmd: cat registry.cert oqsCA.cert oqsRootCA.cert > /opt/registry/certs/registry.cert
      chdir: "{{ ca_cert_path }}"
  - name: copy the key to the Registry directory
    copy:
      src: /etc/pki/tls/private/registry.pem
      remote_src: yes
      dest: /opt/registry/certs/registry.key
      owner: root
      group: root
      mode: 0440

- name: create environment file
  blockinfile:
    dest: /opt/registry/ESIRegistry.env
    mode: 0644
    insertbefore: BOF
    create: yes
    block: |
      REGISTRY_AUTH=htpasswd
      REGISTRY_AUTH_HTPASSWD_REALM="ESI for z/VM Registry Realm"
      REGISTRY_AUTH_HTPASSWD_PATH=/auth/htpasswd
      REGISTRY_HTTP_TLS_CERTIFICATE=/certs/registry.cert
      REGISTRY_HTTP_TLS_KEY=/certs/registry.key

#- name: create the registry htpasswd file # noqa 302
#  command:
#    cmd: htpasswd -Bb -c /opt/registry/auth/htpasswd ESIreguser secretESIpassword
- name: create the registry htpasswd file
  htpasswd:
    path: /opt/registry/auth/htpasswd
    create: yes
    mode: 0644
    owner: root
    group: root
    name: ESIreguser
    password: secretESIpassword
    crypt_scheme: bcrypt
    state: present

- name: pull the registry image
  podman_image:
    name: docker.io/ibmcom/registry-s390x:2.6.2.5

- name: create systemd service for interface reconfiguration
  blockinfile:
    dest: /usr/local/lib/systemd/system/podman-registry.service
    mode: 0644
    insertbefore: BOF
    create: yes
    block: |
      [Unit]
      Requires=network-online.target
      After=network-online.target named-chroot.service
      Wants=syslog.service

      [Service]
      # Restart=on-failure
      ExecStart=/usr/bin/podman run --rm --name ESIRegistry \
          --conmon-pidfile /%t/%n-pid --cidfile /%t/%n-cid \
          -p 5000:5000 --env-file /opt/registry/ESIRegistry.env \
          -v /opt/registry/data:/var/lib/registry:ro \
          -v /opt/registry/auth:/auth:z \
          -v /opt/registry/certs:/certs:z \
          -d docker.io/ibmcom/registry-s390x:2.6.2.5
      ExecStop=/usr/bin/sh -c "/usr/bin/podman rm -f `cat /%t/%n-cid` && rm -f /%t/%n-cid"
      KillMode=none
      Type=forking
      PIDFile=/%t/%n-pid

      [Install]
      WantedBy=default.target

- name: allow traffic at 5000 for registry
  tags: firewall
  firewalld:
    port: 5000/tcp
    zone: "{{ item }}"
    state: enabled
    immediate: true
    permanent: true
  with_items:
  - internal
  - public
