---
- name: Wait for ICIC management node accessibility
  hosts: s390x_bastion_workstation
  tasks:
  - name: Wait for SSH
    wait_for:
      port: 22
      host: "172.24.26.11"
      search_regex: OpenSSH
      delay: 1
      timeout: 10000

- name: Gather facts from the ICIC management node
  hosts: s390x_ICIC_management_node
  tasks:
    - setup:

- name: Create the certificate and DNS for ICIC
  hosts: s390x_bastion_workstation
  tasks:
  - name: Create ICIC certificate
    include_tasks: tasks/create-certificate.yml
    with_items:
    - { filename: "icic", common_name: "icicmgt0.{% raw %}{{ esigroup }}.{{ cluster_base_domain }}{% endraw %}", subject_alt_name: ",IP:{% raw %}{{ icic_management_ip_address }}{% endraw %}" }
  - name: Add or modify A for ICIC management (make a hack)
    nsupdate:
      key_name: "{% raw %}{{ esigroup | lower }}-key{% endraw %}"
      key_secret: "{% raw %}{{ tsigkey }}{% endraw %}"
      key_algorithm: "hmac-sha256"
      server: "172.24.26.1"
      zone: "{% raw %}{{ esigroup | lower }}.{{ cluster_base_domain }}{% endraw %}"
      record: icicmgt0
      type: A
      value: "172.24.26.11"
  - name: Add or modify PTR for ICIC management
    nsupdate:
      key_name: "{% raw %}{{ esigroup | lower }}-key{% endraw %}"
      key_secret: "{% raw %}{{ tsigkey }}{% endraw %}"
      key_algorithm: "hmac-sha256"
      server: "172.24.26.1"
      zone: "26.24.172.in-addr.arpa"
      record: "11"
      type: PTR
      value: "{% raw %}icicmgt0.{{ esigroup | lower }}.{{ cluster_base_domain }}{% endraw %}."

- name: Setup the ICIC management node
  hosts: s390x_ICIC_management_node
  vars:
    icicver: "{% raw %}{{ lookup('file', '/var/www/html/.secret/.icicver' )}}{% endraw %}"
    icicpath: "/opt/icic/{% raw %}{{ icicver }}{% endraw %}"
  tasks:
  - name: Create installation config file
    block:
    - name: Create the configuration direcctory
      file:
        dest: /etc/icic
        state: directory
        mode: '0750'
    - name: Create config file
      template:
        src: icic-config-properties.j2
        dest: /etc/icic/config.properties

  - name: Set the system locale
    command: localectl set-locale en_US.UTF8

  - name: Install dependencies of the installer
    dnf:
      state: present
      name:
        - gettext
        - gettext-libs
        - java-1.8.0-openjdk
        - java-1.8.0-openjdk-headless

  - name: Extract the installation code
    unarchive:
      src: "{% raw %}{{ item }}{% endraw %}"
      dest: /tmp/
      remote_src: false
    with_fileglob: "{% raw %}{{ icicpath }}/icic-install-*-{{ icicver }}*.tgz{% endraw %}"

  - name: Run the silent installation script
    command:
      chdir: /tmp/icic-{% raw %}{{ icicver }}{% endraw %}/
      cmd: ./install -s -z -e -c
    environment:
      HOST_INTERFACE: encad0

  - name: Make sure CA certificates are onboarded
    block:
    - name: Run update-ca-trust
      command:
        cmd: update-ca-trust
    - name: Run c_rehash
      command:
        cmd: openssl rehash /etc/pki/ca-trust/source/anchors/

  - name: Install the ICIC certificate(s)
    block:
    - name: Copy the private key
      copy:
        src: "/etc/pki/tls/private/icic.pem"
        dest: "/etc/pki/tls/private/icic.key"
        backup: yes
        owner: root
        group: root
        mode: "0440"
    - name: Copy the certificate(s)
      template:
        src: icic-cert-bundle.j2
        dest: "/etc/pki/tls/certs/icic.crt"
        backup: yes
        owner: root
        group: root
        mode: "0644"
    - name: Restart the ICIC services
      command:
        cmd: /opt/ibm/icic/bin/icic-services restart

- name: Set the DNS for the ICIC management node correctly
  hosts: s390x_bastion_workstation
  tasks:
  - name: Add or modify A for ICIC management (make a hack)
    nsupdate:
      key_name: "{% raw %}{{ esigroup | lower }}-key{% endraw %}"
      key_secret: "{% raw %}{{ tsigkey }}{% endraw %}"
      key_algorithm: "hmac-sha256"
      server: "172.24.26.1"
      zone: "{% raw %}{{ esigroup | lower }}.{{ cluster_base_domain }}{% endraw %}"
      record: icicmgt0
      type: A
      value: "{% raw %}{{ icic_management_ip_address }}{% endraw %}"