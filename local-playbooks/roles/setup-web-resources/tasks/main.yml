---
- name: Install php and requisites
  yum:
    name:
      - php
      - php-json
      - php-ldap
      - php-mbstring
      - php-Smarty
    state: present

- name: Create configuration for our external non-SSL VirtualHost
  blockinfile:
    dest: /etc/httpd/conf.d/nonssl.conf
    create: yes
    mode: "0644"
    owner: root
    group: root
    block: |
      <VirtualHost *:8080>
        <Directory "/var/www/html/install">
          Options +Indexes +FollowSymLinks -SymlinksIfOwnerMatch
          Require all granted
          SetEnvIf Request_URI "^/(?:(.+)/)?$" DIRECTORY_NAME=/$1
          <FilesMatch "index.php">
            Require all granted
          </FilesMatch>
          IndexOptions IgnoreCase FancyIndexing FoldersFirst NameWidth=* DescriptionWidth=* SuppressHTMLPreamble
          IndexOrderDefault Descending Name
          HeaderName /indexhdr.html
          ReadmeName /indexftr.html
          AddDescription "<span class='ds-label'>CoreOS Installation root filesystem</span>" rhcos-live-rootfs.*
          AddDescription "<span class='ds-label'>CoreOS Installation Linux kernel</span>" rhcos-live-kernel-*
          AddDescription "<span class='ds-label'>CoreOS Installation initramfs</span>" rhcos-live-initramfs.*
        </Directory>
        <Directory "/var/www/html/bootfiles">
          Options +Indexes +FollowSymLinks 
          Require all granted
          SetEnvIf Request_URI "^/(?:(.+)/)?$" DIRECTORY_NAME=/$1
          <FilesMatch "index.php">
            Require all granted
          </FilesMatch>
          IndexOptions IgnoreCase FancyIndexing FoldersFirst NameWidth=* DescriptionWidth=* SuppressHTMLPreamble
          IndexOrderDefault Descending Name
          HeaderName /indexhdr.html
          ReadmeName /indexftr.html
          AddDescription "<span class='ds-label'>Config file for the ZNETBOOT loader</span>" .znetboot
        </Directory>
        <Directory "/var/www/html">
          Options Indexes FollowSymLinks Includes
          XBitHack On
          <FilesMatch ".*\.php$">
            Require all denied
          </FilesMatch>
          <FilesMatch "(s_|ocp-|start).*$">
            Require all denied
          </FilesMatch>
          ErrorDocument 403 /error.html
          AllowOverride None
          Require all granted
        </Directory>
      </VirtualHost>

- name: Add the Apache configuration for the tools
  blockinfile:
    dest: /etc/httpd/conf.d/ssl.conf
    insertbefore: "</VirtualHost>"
    block: |
      SetEnv DOMAIN_NAME {{ cluster_base_domain }}
      DirectoryIndex s_index.html index.php
      Alias /password {{ webroot }}/self-service-password-racf-master
      Alias /ldap-sd  {{ webroot }}/service-desk-racf-master/htdocs
      <Directory "/var/www/html">
        Options Indexes FollowSymLinks Includes
        XBitHack On
        ErrorDocument 403 /error.html
        AllowOverride None
        Require all granted
        SetEnvIf Request_URI "^/(?:(.+)/)?$" DIRECTORY_NAME=/$1
        IndexOptions IgnoreCase FancyIndexing FoldersFirst NameWidth=* DescriptionWidth=* SuppressHTMLPreamble
        IndexOrderDefault Descending Name
        HeaderName /indexhdr.html
        ReadmeName /indexftr.html
        AddDescription "<span class='ds-label'>CoreOS Installation root filesystem</span>" rhcos-live-rootfs.*
        AddDescription "<span class='ds-label'>CoreOS Installation Linux kernel</span>" rhcos-live-kernel-*
        AddDescription "<span class='ds-label'>CoreOS Installation initramfs</span>" rhcos-live-initramfs.*
        AddDescription "<span class='ds-label'>Config file for the ZNETBOOT loader</span>" .znetboot
      </Directory>
      <Directory "{{ webroot }}/self-service-password-racf-master">
        AllowOverride None
        Require all granted
      </Directory>
      <Directory "{{ webroot }}/self-service-password-racf-master/scripts">
        AllowOverride None
        Require all denied
      </Directory>
      <Directory "{{ webroot }}/service-desk-racf-master/htdocs">
        AllowOverride None
        Require all granted
      </Directory>
      # Reverse-proxy configuration for PerfKit
      AddOutputFilterByType SUBSTITUTE text/html
      SSLProxyEngine on
      ProxyPassMatch "^/perftk/(.*)$" "https://zvm.ibmpoc.internal:81/$1"
      ProxyPassReverse "/perftk/" "https://zvm.ibmpoc.internal:81/"
      Substitute s|https://zvm.ibmpoc.internal:81|/perftk/|in
      Substitute s|/([A-F0-9]+)/([A-F0-9]+)/\"\+lnam|/perftk/$1/$2/\"\+lnam|
      # Reverse-proxy configuration for cross-system stats
      ProxyPassMatch "^/zvmstats-(.*).json$" "https://$1:8443/zvmstats.json"

- name: Download and unwind LDAP tools
  block:
#  - name: Download and unzip Smarty PHP template engine
#    unarchive:
#      src: "https://github.com/smarty-php/smarty/archive/v3.1.36.tar.gz"
#      dest: "/usr/local/bin/"
#      creates: "/usr/local/bin/smarty-3.1.36/"
#      remote_src: yes
#    environment: "{{ local_proxy_env | default(omit) }}"

  - name: Download and unzip self-service-password
    unarchive:
      src: "https://github.com/viccross/self-service-password-racf/archive/master.zip"
      dest: "{{ webroot }}/"
      remote_src: yes
    environment: "{{ local_proxy_env | default(omit) }}"

  - name: Download and unzip service-desk
    unarchive:
      src: "https://github.com/viccross/service-desk-racf/archive/master.zip"
      dest: "{{ webroot }}/"
      remote_src: yes
    environment: "{{ local_proxy_env | default(omit) }}"

  - name: Make w3ds directory
    file:
      path: "{{ webroot }}/w3ds"
      state: directory
      mode: 0755

  - name: Download and unzip w3DS
    unarchive:
      src: "/opt/resources/w3ds-6.2.4.zip"
      dest: "{{ webroot }}/w3ds"
      creates: "{{ webroot }}/w3ds/w3ds.js"

  - name: Download and unzip site structure
    unarchive:
      src: "/opt/resources/{{ elan_web_pkgname }}.zip"
      dest: "{{ webroot }}/"
      creates: "{{ webroot }}/{{ elan_web_pkgname }}/{{ meta_header_file }}"

  - name: Move downloaded site directory # noqa no-free-form
    shell:
      cmd: |
        rm -rf {{ webroot }}/{scripts,justgage} \
        rm -rf {{ webroot }}/{{ elan_web_pkgname }}/{build,tests,.travis.yml} \
        && mv {{ webroot }}/{{ elan_web_pkgname }}/* {{ webroot }}/ \
        && rm -rf {{ webroot }}/{{ elan_web_pkgname }}
      removes: "{{ webroot }}/{{ elan_web_pkgname }}"

  - name: Set permission on the HTML files to enable Includes
    file:
      path: "{{ webroot }}/{{ item }}"
      owner: root
      group: apache
      mode: 0750
    loop:
      - ocp-cockpit.html
      - ocp-console.html
      - ocp-haproxy.html
      - ocp-perfkit.html
      - dashboard.html
      - metrics.html
      - gethelp.html
      - index.html
      - s_header.html
      - s_index.html
      - starticic.html
      - startocp.html

  - name: Symlink to the CA certificates
    block:
    - name: Symlink to the bundle
      file:
        src: "/etc/pki/tls/certs/oqsCA.certs.bundle"
        dest: "{{ webroot }}/ESICABundle.pem"
        state: link
    - name: Symlink to the Root CA cert
      file:
        src: "/etc/pki/tls/certs/oqsRootCA.cert"
        dest: "{{ webroot }}/ESIRootCA.pem"
        state: link
    - name: Symlink to the Intermediate CA cert
      file:
        src: "/etc/pki/tls/certs/oqsCA.cert"
        dest: "{{ webroot }}/ESICA.pem"
        state: link

  - name: Patch the basic stats script, if needed
    lineinfile:
      line: my $vmcpCmd="/usr/local/bin/vmcp";              # the vmcp command
      dest: "{{ webroot }}/scripts/metrics.pl"
      regexp: "^my \\$vmcpCmd.*"
    when: ansible_architecture != "s390x"

  - name: Install the basic stats script to local executable path
    shell:
      cmd: "mv {{ webroot }}/scripts/metrics.pl /usr/local/sbin/ && rmdir {{ webroot }}/scripts"
      removes: "{{ webroot }}/scripts"

  - name: Set permission on metrics.pl
    file:
      path: /usr/local/sbin/metrics.pl
      owner: root
      mode: 0750

  - name: Enable running metrics script via cron
    cron:
      name: Run metrics.pl
      user: root
      job: "/usr/local/sbin/metrics.pl"
      cron_file: metrics

  - name: Set PATH variable for metrics crontab
    cronvar:
      cron_file: metrics
      name: PATH
      value: /usr/sbin:/usr/bin

  - name: Set MAILTO variable for metrics crontab
    cronvar:
      cron_file: metrics
      name: MAILTO
      value: root

  - name: Create/set permission on directories - secrets, Smarty template cache, content, and install
    file:
      path: "{{ item }}"
      owner: apache
      mode: 0750
      setype: httpd_sys_rw_content_t
      state: directory
    loop:
      - "{{ webroot }}/.secret"
      - "{{ webroot }}/service-desk-racf-master/templates_c"
      - /opt/content
      - "{{ webroot }}/install"
      - "{{ webroot }}/.cluster"
      - "{{ webroot }}/.clustertmp"

  - name: Create and set perms on incrond trigger files
    file:
      path: "{{ webroot }}/.secret/{{ item }}"
      owner: apache
      group: root
      mode: 0660
      setype: httpd_sys_rw_content_t
      state: touch
    loop:
      - ".ocp4_pull_secret"
      - ".fastvmurl"

#  - name: fix path to Smarty in config file
#    lineinfile:
#      dest: "{{ webroot }}/service-desk-racf-master/conf/config.inc.php"
#      regexp: "SMARTY"
#      line: define("SMARTY", "/usr/share/php/Smarty/Smarty.class.php");

  - name: Create config.inc.local.php for self-service-password
    template:
      src: self-service-password/config.inc.local.php.j2
      dest: "{{ webroot }}/self-service-password-racf-master/conf/config.inc.local.php"
      mode: 0644

  - name: Create config.inc.local.php for service-desk-racf
    template:
      src: service-desk-racf/config.inc.local.php.j2
      dest: "{{ webroot }}/service-desk-racf-master/conf/config.inc.local.php"
      mode: 0644

- name: Prime the ocp-version file with 'default' version
  copy:
    content: "4.8"
    dest: "{{ webroot }}/ocp-version"
    owner: apache
    group: apache
    setype: httpd_sys_rw_content_t
    mode: 0644

- name: Patch php.ini for uploads
  block:
  - name: Patch post_max_size
    lineinfile:
      dest: /etc/php.ini
      regex: ^post_max_size
      line: post_max_size = 0
  - name: Patch upload_max_filesize
    lineinfile:
      dest: /etc/php.ini
      regex: ^upload_max_filesize
      line: upload_max_filesize = 0


- name: Permit SELinux access to network from Apache (for reverse proxy)
  seboolean:
    name: httpd_can_network_connect
    state: yes
    persistent: yes

- name: Permit SELinux access to LDAP from Apache
  seboolean:
    name: httpd_can_connect_ldap
    state: yes
    persistent: yes

- name: Restart httpd
  service:
    name: httpd.service
    state: restarted
    enabled: yes

- name: Restart php-fpm
  service:
    name: php-fpm.service
    state: restarted
    enabled: yes
