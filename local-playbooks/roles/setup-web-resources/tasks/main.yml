---
- name: generate httpd private key
  openssl_privatekey:
    path: /etc/pki/tls/private/httpd.pem

- name: generate httpd CSR
  openssl_csr:
    path: /etc/pki/tls/misc/httpd.csr
    privatekey_path: /etc/pki/tls/private/httpd.pem
    common_name: "{{ guest_install_hostname }}.{{ cluster_name }}.{{ cluster_base_domain }}"
    organization_name: "{{ cert_organization }}"
    organizational_unit_name: "Red Hat Openshift PoC"
    country_name: "{{ cert_country }}"
    keyUsage: ["digitalSignature","keyAgreement"]
    extendedKeyUsage: ["clientAuth","serverAuth"]

- name: generate Certificate
  openssl_certificate:
    path: /etc/pki/tls/certs/httpd.cert
    csr_path: /etc/pki/tls/misc/httpd.csr
    ownca_path: /etc/pki/tls/certs/oqsCA.cert
    ownca_privatekey_path: /etc/pki/tls/private/oqsCA.pem
    ownca_not_after: +365d
    provider: ownca

- name: install apache httpd and mod_ssl
  yum:
    name:
      - httpd
      - mod_ssl
      - php
      - php-ldap
      - php-mbstring
    state: present

- name: set ServerName and ServerAlias
  lineinfile:
    dest: /etc/httpd/conf/httpd.conf
    regexp: ^#?ServerName
    line: ServerName {{ guest_install_hostname }}.{{ cluster_domain_name }}

- name: define CA details for apache, SSLCertificateFile
  lineinfile:
    dest: /etc/httpd/conf.d/ssl.conf
    regexp: "^#?SSLCertificateFile"
    line: SSLCertificateFile /etc/pki/tls/certs/httpd.cert

- name: define CA details for apache, SSLCertificateKeyFile
  lineinfile:
    dest: /etc/httpd/conf.d/ssl.conf
    regexp: "^#?SSLCertificateKeyFile"
    line: SSLCertificateKeyFile /etc/pki/tls/private/httpd.pem

- name: define CA details for apache, SSLCertificateChainFile
  lineinfile:
    dest: /etc/httpd/conf.d/ssl.conf
    regexp: "^#?SSLCertificateChainFile"
    line: SSLCertificateChainFile /etc/pki/tls/certs/oqsCA.cert

- name: create configuration for our external non-SSL VirtualHost
  blockinfile:
    dest: /etc/httpd/conf.d/nonssl.conf
    create: yes
    mode: "0644"
    owner: root
    group: root
    block: |
      <VirtualHost {{ guest_install_hostname }}.{{ cluster_domain_name }}:8080>
        <Directory "/var/www/html">
          Options Indexes FollowSymLinks Includes
          XBitHack On
          <FilesMatch ".*\.php$">
            Require all denied
          </FilesMatch>
          <FilesMatch "(s_|ocp-|start).*$">
            Require all denied
          </FilesMatch>
          ErrorDocument 403 /error.html
          AllowOverride None
          Require all granted
        </Directory>
      </VirtualHost>

- name: bind httpd to port 8080
  lineinfile:
    dest: /etc/httpd/conf/httpd.conf
    regexp: ^Listen 80
    line: Listen 8080

- name: switch Apache SSL port to 8443
  lineinfile:
    dest: /etc/httpd/conf.d/ssl.conf
    regexp: "^Listen"
    line: Listen *:8443

- name: switch Apache SSL VirtualHost to 8443
  lineinfile:
    dest: /etc/httpd/conf.d/ssl.conf
    regexp: "VirtualHost _default_:443"
    line: <VirtualHost _default_:8443>

- name: add the Apache configuration for the tools
  blockinfile:
    dest: /etc/httpd/conf.d/ssl.conf
    insertbefore: "</VirtualHost>"
    block: |
      DirectoryIndex s_index.html
      Alias /password {{ webroot }}/self-service-password-racf-master
      Alias /ldap-sd  {{ webroot }}/service-desk-racf-master/htdocs
      <Directory "/var/www/html">
        Options Indexes FollowSymLinks Includes
        XBitHack On
        ErrorDocument 403 /error.html
        AllowOverride None
        Require all granted
      </Directory>
      <Directory "{{ webroot }}/self-service-password-racf-master">
        AllowOverride None
        Require all granted
      </Directory>
      <Directory "{{ webroot }}/self-service-password-racf-master/scripts">
        AllowOverride None
        Require all denied
      </Directory>
      <Directory "{{ webroot }}/service-desk-racf-master/htdocs">
        AllowOverride None
        Require all granted
      </Directory>
      # Reverse-proxy configuration for PerfKit
      AddOutputFilterByType SUBSTITUTE text/html
      SSLProxyEngine on
      ProxyPassMatch "^/perftk/(.*)$" "https://zvm.ibmpoc.internal:81/$1"
      ProxyPassReverse "/perftk/" "https://zvm.ibmpoc.internal:81/"
      Substitute s|https://zvm.ibmpoc.internal:81|/perftk|in
      Substitute s|/([A-F0-9]+)/([A-F0-9]+)/\"\+lnam|/perftk/$1/$2/\"\+lnam|

- name: allow traffic at 8080 for apache
  tags: firewall
  firewalld:
    port: 8080/tcp
    zone: "{{ item }}"
    state: enabled
    immediate: true
    permanent: true
  with_items:
  - internal
  - public

- name: allow traffic at 8443 for apache
  tags: firewall
  firewalld:
    port: 8443/tcp
    zone: "{{ item }}"
    state: enabled
    immediate: true
    permanent: true
  with_items:
  - internal
  - public

- name: download and unwind LDAP tools
  block:
  - name: download and unzip Smarty PHP template engine
    unarchive:
      src: "https://github.com/smarty-php/smarty/archive/v3.1.36.tar.gz"
      dest: "/usr/local/bin/"
      creates: "/usr/local/bin/smarty-3.1.36/"
      remote_src: yes
    environment: "{{ local_proxy_env | default(omit) }}"

  - name: download and unzip self-service-password
    unarchive:
      src: "https://github.com/viccross/self-service-password-racf/archive/master.zip"
      dest: "{{ webroot }}/"
      creates: "{{ webroot }}/self-service-password-racf"
      remote_src: yes
    environment: "{{ local_proxy_env | default(omit) }}"

  - name: download and unzip service-desk
    unarchive:
      src: "https://github.com/viccross/service-desk-racf/archive/master.zip"
      dest: "{{ webroot }}/"
      creates: "{{ webroot }}/service-desk-racf"
      remote_src: yes
    environment: "{{ local_proxy_env | default(omit) }}"

  - name: make w3ds directory
    file:
      path: "{{ webroot }}/w3ds"
      state: directory
      mode: 0755

  - name: download and unzip w3DS
    unarchive:
      src: "/opt/resources/w3ds-6.2.4.zip"
      dest: "{{ webroot }}/w3ds"
      creates: "{{ webroot }}/w3ds/w3ds.js"

  - name: download and unzip site structure
    unarchive:
      src: "/opt/resources/{{ oqs_header_pkgname }}.zip"
      dest: "{{ webroot }}/"
      creates: "{{ webroot }}/{{ oqs_header_pkgname }}/{{ meta_header_file }}"

  - name: move downloaded site directory # noqa 302
    shell:
      cmd: |
        rm -rf {{ webroot }}/{scripts,justgage} \
        && mv {{ webroot }}/{{ oqs_header_pkgname }}/* {{ webroot }}/ \
        && rm -rf {{ webroot }}/{{ oqs_header_pkgname }}
      removes: "{{ webroot }}/{{ oqs_header_pkgname }}"

  - name: Set permission on the HTML files to enable Includes
    file:
      path: "{{ webroot }}/{{ item }}"
      owner: root
      group: apache
      mode: 0750
    loop:
      - ocp-cockpit.html
      - ocp-console.html
      - ocp-haproxy.html
      - ocp-perfkit.html
      - metrics.html
      - gethelp.html
      - index.html
      - s_index.html
      - starticic.html
      - startocp.html

  - name: symlink to the OQS CA certificate
    file:
      src: "/etc/pki/tls/certs/oqsCA.certs.bundle"
      dest: "{{ webroot }}/oqsCA.cert"
      state: link

  - name: install the basic stats script to local executable path
    shell:
      cmd: "mv {{ webroot }}/scripts/metrics.pl /usr/local/sbin/ && rmdir {{ webroot }}/scripts"
      creates: /usr/local/sbin/metrics.pl
      removes: "{{ webroot }}/scripts"

  - name: Set permission on metrics.pl
    file:
      path: /usr/local/sbin/metrics.pl
      owner: root
      mode: 0750

  - name: Enable running metrics script via cron
    cron:
      name: Run metrics.pl
      user: root
      job: "/usr/local/sbin/metrics.pl"
      cron_file: metrics

  - name: set PATH variable for metrics crontab
    cronvar:
      cron_file: metrics
      name: PATH
      value: /usr/sbin:/usr/bin

  - name: set MAILTO variable for metrics crontab
    cronvar:
      cron_file: metrics
      name: MAILTO
      value: root

  - name: Create directory for pull secret
    file:
      path: "{{ webroot }}/.secret"
      mode: 0700
      owner: apache
      state: directory

  - name: Set permission on secret directory and Smarty template cache
    file:
      path: "{{ webroot }}/{{ item }}"
      owner: apache
      mode: 0750
      setype: httpd_sys_rw_content_t
      state: directory
    loop:
      - ".secret"
      - "service-desk-racf-master/templates_c"

#  - name: fix path to Smarty in config file
#    lineinfile:
#      dest: "{{ webroot }}/service-desk-racf-master/conf/config.inc.php"
#      regexp: "SMARTY"
#      line: define("SMARTY", "/usr/share/php/Smarty/Smarty.class.php");

  - name: create config.inc.local.php for self-service-password
    template:
      src: self-service-password/config.inc.local.php.j2
      dest: "{{ webroot }}/self-service-password-racf-master/conf/config.inc.local.php"
      mode: 0644

  - name: create config.inc.local.php for service-desk-racf
    template:
      src: service-desk-racf/config.inc.local.php.j2
      dest: "{{ webroot }}/service-desk-racf-master/conf/config.inc.local.php"
      mode: 0644

- name: prime the ocp-version file with 'default' version
  copy:
    content: "4.6"
    dest: "{{ webroot }}/ocp-version"
    mode: 0644

- name: permit SELinux access to network from Apache (for reverse proxy)
  seboolean:
    name: httpd_can_network_connect
    state: yes
    persistent: yes

- name: permit SELinux access to LDAP from Apache
  seboolean:
    name: httpd_can_connect_ldap
    state: yes
    persistent: yes

- name: restart httpd
  service:
    name: httpd.service
    state: restarted
    enabled: yes
