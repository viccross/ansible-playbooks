#!/bin/bash
#
# ocp-dasd.sh
# Define the DASD for OCP to the z/VM system
# - Script is deployed by Ansible, with DASD label prefix pre-configured
# - Run at boot time to detect required DASD
#

ocpdasd={{ ocp_dasd_prefix }}

# Check if any of the DASDs are not attached
mapfile -t dasds < <(
        sudo vmcp -b 64k q dasd free |
        tr [','] ['\n'] | grep ${ocpdasd} | awk '{print $2;}')

{% raw %}if [ ${#dasds[@]} != 0 ] ; {% endraw %}then
        echo "Some of our DASDs are not attached. Attaching now"
        for dasd in ${dasds[@]}; do
                sudo vmcp att ${dasd} to system
        done
fi

# obtain list of DASDs
# We obtain label and cylinder size... turns out we don't need the size :/ )
mapfile -t dasds < <(
        for DASD in $(sudo vmcp -b 32k q dasd |
        grep ${ocpdasd} | awk '{print $2;}') ; do
                sudo vmcp q da details $DASD |
                grep CYLS | awk '{print $10 $13;}' | awk -F, '{print $1, $2 ;}'
        done )

{% raw %}if [ ${#dasds[@]} = 0 ] ; {% endraw %}then
        echo "There are no DASDs!";
        exit 1;
fi

# loop through the DASD list to see if the DASD is defined to DIRM, define if not
IFS='\n';
for dasd in ${dasds[@]}; do
        echo "Checking ${dasd% *}..."
        smcli ivsqd -T {{ ocp_smapi_user }} -q 1 -e 1 -H {{ ocp_smapi_host }} -U {{ ocp_smapi_user }} -P '{{ ocp_smapi_password }}' -n ${dasd% *}
        if [ $? = 1 ]; then
                let size=${dasd#* }-1
                smcli ivsdd -T {{ ocp_smapi_user }} -H {{ ocp_smapi_host }} -U {{ ocp_smapi_user }} -P '{{ ocp_smapi_password }}' -f4 -t0 -r ${dasd% *} -v ${dasd% *} -g OCPDASD
        else
                echo "DASD already defined, no action";
        fi
done

# Add MDISK(s) to the OCP guests
ocpguests="{{ guestnames }}"
IFS=" ";

# Do this for each guest:
for guest in ${ocpguests}; do
#   list the existing MDISKs
  if [ $(smcli iqd -T ${guest} -H {{ ocp_smapi_host }} -U {{ ocp_smapi_user }} -P '{{ ocp_smapi_password }}' | grep MDISK | wc -l ) = "0" ]; then
#   if none, add one:
#     list the available volumes
    mapfile -t dasds < <(smcli ivsqd -T {{ ocp_smapi_user }} -q 2 -e 3 -H {{ ocp_smapi_host }} -U {{ ocp_smapi_user }} -P '{{ ocp_smapi_password }}' -n LINUXEAV )
#     grab the first one from the list
    IFS=" " read -r -a dasd <<< ${dasds[0]}
#     issue an smcli idicrd for the dasd
    smcli idicrd -T ${guest} -a 200 -d X -t AUTOV -n ${dasd[0]} -u 1 -s ${dasd[3]} -m MR -f 1 -H {{ ocp_smapi_host }} -U {{ ocp_smapi_user }} -P '{{ ocp_smapi_password }}'
  fi
done
