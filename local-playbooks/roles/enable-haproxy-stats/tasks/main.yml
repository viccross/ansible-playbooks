---
- name: Create SSL for Stats page
  block:
  - name: Generate haproxy private key
    openssl_privatekey:
      path: /etc/pki/tls/private/haproxy.pem

  - name: Generate httpd CSR
    openssl_csr:
      path: /etc/pki/tls/misc/haproxy.csr
      privatekey_path: /etc/pki/tls/private/haproxy.pem
      common_name: "{{ guest_install_hostname }}.{{ cluster_name }}.{{ cluster_base_domain }}"
      subject_alt_name:
        - "DNS:{{ guest_install_hostname }}.{{ cluster_name }}.{{ cluster_base_domain }}"
        - "DNS:{{ guest_install_hostname }}.{{ cluster_base_domain }}"
      organization_name: "{{ cert_organization }}"
      organizational_unit_name: "Red Hat Openshift PoC"
      country_name: "{{ cert_country }}"

  - name: Generate Certificate
    openssl_certificate:
      path: /etc/pki/tls/certs/haproxy.cert
      csr_path: /etc/pki/tls/misc/haproxy.csr
      ownca_path: /etc/pki/tls/certs/oqsCA.cert
      ownca_privatekey_path: /etc/pki/tls/private/oqsCA.pem
      ownca_not_after: +397d
      provider: ownca
      force: yes

  - name: Create combined PEM file for HAProxy
    shell:
      cmd: cat certs/haproxy.cert certs/oqsCA.cert private/haproxy.pem > /etc/haproxy/haproxy-combined.pem
      chdir: /etc/pki/tls/

  - name: Set permissions on certificate
    file:
      path: /etc/haproxy/haproxy-combined.pem
      owner: root
      group: haproxy
      mode: 0640

- name: Add the HA-Proxy configuration for the statistics interface
  blockinfile:
    dest: /etc/haproxy/haproxy.cfg
    block: |
      frontend stats
        bind *:8404 ssl crt /etc/haproxy/haproxy-combined.pem
        stats enable
        stats uri /stats
        stats refresh 10s
        stats admin if LOCALHOST
  notify: "Restart haproxy.service"

- name: Allow traffic at 8404 for haproxy
  tags: firewall
  firewalld:
    port: 8404/tcp
    zone: "{{ item }}"
    state: enabled
    immediate: true
    permanent: true
  with_items:
  - internal
  - public
