---
- name: ensure all required directories exist on the host
  file:
    path: "{{ item }}"
    state: directory
    mode: 0755
  loop:
    - "/mnt/znetboot"
    - "/opt/ansible/tasks"
    - "/opt/ansible/inventory/group_vars"
    - "/opt/ansible/templates/named"
    - "/opt/ansible/templates/haproxy"
    - "/usr/local/lib/systemd/system"
  register: ret
  failed_when:
    - 'ret.rc is defined'
    - '"Read-only file system" not in ret.module_stdout'

- name: add the cmsfs-fuse-a script
  copy:
    dest: /usr/local/bin/cmsfs-fuse-a
    owner: root
    mode: 0755
    content: |
      #!/bin/sh
      cmsfs-fuse -a $@

- name: add the fstab entry for LNXMAINT.200
  mount:
    state: present
    src: /dev/disk/by-path/ccw-0.0.0191
    path: /mnt/znetboot
    fstype: fuse.cmsfs-fuse-a
    opts: allow_other,uid=1000
    passno: "0"
    dump: "0"

- name: make sure ELAN can access the config disk # noqa no-changed-when
  shell:
    cmd: |
      ldapmodify -Zx -h {{ zvm_internal_ip_address }} -p 389 -D racfid={{ admin_uid }},profiletype=user,o=ibmzvm -w {{ admin_pwd | quote }} <<EOFLDIF
      dn: profilename=LNXMAINT.200,profiletype=VMMDISK,o=ibmzvm
      changetype: modify
      add: racfaccesscontrol
      racfaccesscontrol: ID(LXOCPB01) ACCESS(CONTROL) COUNT(0)
      EOFLDIF

- name: add the dasd.conf line for LNXMAINT.200
  lineinfile:
    dest: /etc/dasd.conf
    insertbefore: EOF
    line: 0.0.0191

- name: install tools (dependencies of ipconf.sh and LDAPSRVcert)
  yum:
    name: {{ item }}
    state: present
  loop:
  - ipcalc
  - x3270-text

- name: install the ipconf and expandfs scripts to local executable path
  template:
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
    owner: root
    group: root
    mode: 0750
  loop:
  - { src: "checksmapi.sh.j2", dest: "/usr/local/sbin/checksmapi.sh" }
  - { src: "ipconf.sh.j2", dest: "/usr/local/sbin/ipconf.sh" }
  - { src: "embiggen-elan.sh.j2", dest: "/usr/local/sbin/expandfs.sh" }

- name: create systemd services for scripts
  template:
    src: "systemd.service.j2"
    dest: "/usr/local/lib/systemd/system/{{ item.servicename }}.service"
    mode: 0644
  loop:
  - { servicename: "smapi", cmdpath: "/usr/local/sbin/checksmapi.sh", requires: "" }
  - { servicename: "zvm-ipconf", cmdpath: "/usr/local/sbin/ipconf.sh", requires: "smapi.service" }
  - { servicename: "expandfs", cmdpath: "/usr/local/sbin/expandfs.sh", requires: "smapi.service" }

- name: ensure old systemd service files don't exist
  file:
    path: "/etc/systemd/system/{{ item.servicename }}.service"
    state: absent
  loop:
  - { servicename: "zvm-ipconf" }
  - { servicename: "expandfs"}

- name: enable the systemd services but do not start them now
  systemd:
    name: "{{ item.servicename }}"
    daemon_reload: true
    state: stopped
    enabled: yes
  loop:
  - { servicename: "zvm-ipconf" }
  - { servicename: "expandfs"}

- name: copy files for the playbook
  template:
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
    mode: 0644
  loop:
  - { src: "create-certificate.yml.j2", dest: "/opt/ansible/tasks/create-certificate.yml" }
  - { src: "regen-certificates.yml.j2", dest: "/opt/ansible/regen-certificates.yml"}
  - { src: "update-dns-domain.yml.j2", dest: "/opt/ansible/update-dns-domain.yml"}
  - { src: "named/cluster_domain_name.zone.j2", dest: "/opt/ansible/templates/named/cluster_domain_name.zone.j2"}
  - { src: "named/ibmpoc_internal.zone.j2", dest: "/opt/ansible/templates/named/ibmpoc_internal.zone.j2"}
  - { src: "named/named.conf.j2", dest: "/opt/ansible/templates/named/named.conf.j2"}
  - { src: "named/subnet.in-addr.arpa.zone.j2", dest: "/opt/ansible/templates/named/subnet.in-addr.arpa.zone.j2"}
  - { src: "named/zvmesi.zone.j2", dest: "/opt/ansible/templates/named/zvmesi.zone.j2"}
  - { src: "haproxy/haproxy.cfg.j2", dest: "/opt/ansible/templates/haproxy/haproxy.cfg.j2"}
